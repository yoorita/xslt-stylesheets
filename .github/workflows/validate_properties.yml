name: Validate properties before pushing to DITA-OT repo

on:
  pull_request:
    branches:
      - main
    paths:
      - 'plugins/**'

jobs:
  validate_properties:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the source repository
        uses: actions/checkout@v2
        with:
          ref: main

      - name: Read and set up environmental variables from properties file
        run: |
          while IFS='=' read -r key value
            do
              echo "${key}=${value}" >> "$GITHUB_ENV"
          done < "action.properties"

      - name: Set up Git
        run: |
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"

      - name: Check access to DITA-OT repo
        id: access-to-dita-repo
        continue-on-error: true
        run: |
          git ls-remote https://x-access-token:${{ secrets.REPO_TOKEN }}@github.com/${{ github.actor }}/$REPO_NAME.git

      - name: Check Branch existence
        id: check-branch
        continue-on-error: true
        run: |
          git clone https://x-access-token:${{ secrets.REPO_TOKEN }}@github.com/${{ github.actor }}/$REPO_NAME.git $REPO_NAME
          cd $REPO_NAME
          git ls-remote --exit-code --heads origin $BRANCH

      - name: Catch up failure errors
        if: |
          steps.access-to-dita-repo.outcome == 'failure' ||
          steps.check-branch.outcome == 'failure'
        run: |          
          if [ "${{ steps.access-to-dita-repo.outcome }}" == "failure" ]; then
            echo "⚠️ Git repo '$REPO_NAME.git' cannot be accessed" >> errors.md
          fi
          
          if [ "${{ steps.check-branch.outcome }}" == "failure" ]; then
            echo "⚠️ Git branch '$BRANCH' does not exist" >> errors.md
          fi

      - name: Create commit comment
        uses: mshick/add-pr-comment@v2
        if: ${{ hashFiles('errors.md') != '' }}
        with:
          message-path: 'errors.md'
          repo-token: ${{ secrets.REPO_TOKEN }}